// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Willprecht_Final.Models;

namespace Willprecht_Final.Data
{
    public partial class DMVContext : DbContext
    {
        public DMVContext()
        {
        }

        public DMVContext(DbContextOptions<DMVContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Driver> Drivers { get; set; }
        public virtual DbSet<DriverInfraction> DriverInfractions { get; set; }
        public virtual DbSet<Infraction> Infractions { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Driver>(entity =>
            {
                entity.Property(e => e.DriverId).HasColumnName("DriverID");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Ssn)
                    .IsRequired()
                    .IsUnicode(false)
                    .HasColumnName("SSN");
            });

            modelBuilder.Entity<DriverInfraction>(entity =>
            {
                entity.Property(e => e.DriverInfractionId).HasColumnName("DriverInfractionID");

                entity.Property(e => e.DriverId).HasColumnName("DriverID");

                entity.Property(e => e.InfractionId).HasColumnName("InfractionID");

                entity.HasOne(d => d.Driver)
                    .WithMany(p => p.DriverInfractions)
                    .HasForeignKey(d => d.DriverId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DriverInf__Drive__286302EC");

                entity.HasOne(d => d.Infraction)
                    .WithMany(p => p.DriverInfractions)
                    .HasForeignKey(d => d.InfractionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__DriverInf__Infra__29572725");
            });

            modelBuilder.Entity<Infraction>(entity =>
            {
                entity.Property(e => e.InfractionId).HasColumnName("InfractionID");

                entity.Property(e => e.InfractionType)
                    .IsRequired()
                    .IsUnicode(false);
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Role)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Vehicle>(entity =>
            {
                entity.Property(e => e.VehicleId).HasColumnName("VehicleID");

                entity.Property(e => e.DriverId).HasColumnName("DriverID");

                entity.Property(e => e.LicensePlateNumber)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.VehicleMake)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.VehicleModel)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.VehicleYear)
                    .IsRequired()
                    .IsUnicode(false);

                entity.HasOne(d => d.Driver)
                    .WithMany(p => p.Vehicles)
                    .HasForeignKey(d => d.DriverId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Vehicles__Driver__2E1BDC42");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}